C51 COMPILER V9.52.0.0   KEY                                                               04/22/2019 15:28:00 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\output\key.obj
COMPILER INVOKED BY: D:\Keil_v4\C51\BIN\C51.EXE source\key.c BROWSE INCDIR(.\include) DEBUG OBJECTEXTEND PRINT(.\key.lst
                    -) TABS(2) OBJECT(.\output\key.obj)

line level    source

   1          #include "key.h"
   2          
   3          
   4          //#define   key_input   ((PORT_K_U<<1) | PORT_K_D)
   5          #define   key_state_0   0   // 按键初始状态
   6          #define   key_state_1   1   // 按键按下确认状态
   7          #define   key_state_2   2   // 按键释放状态
   8          #define   key_state_3   3   // 按键长按确认状态
   9          
  10          #define   KEY_DECRE (1<<0)
  11          #define   KEY_INCRE (1<<1)
  12          #define   KEY_MENU  (1<<2)
  13          
  14          enum {
  15            MENU_NoADJ,
  16            MENU_ADJ_HOUR,
  17            MENU_ADJ_MIN,
  18            MENU_ADJ_SEC,
  19            MENU_ADJ_NUM,
  20          };
  21          
  22          volatile unsigned char Flag_key_incre;
  23          volatile unsigned char Flag_key_decre;
  24          volatile unsigned char Flag_key_menu;
  25          
  26          void Keys_Scan()
  27          {
  28   1        static unsigned int key_state = 0;
  29   1        unsigned char key_press;
  30   1        unsigned char key_input;
  31   1        //u8 key_return = 0;  
  32   1              
  33   1        //key_input  = !PORT_K_U;
  34   1        //key_input  = key_input<<1;
  35   1        //key_input |= (!PORT_K_D);
  36   1        key_press  = key_input;         // 读按键I/O电平
  37   1        switch (key_state)
  38   1        {
  39   2          case key_state_0:         // 按键初始态
  40   2            //if (key_press) key_state = key_state_1; // 键被按下，状态转换到键确认态
  41   2            if (key_press)
  42   2            {
  43   3              key_state = key_state_1;
  44   3              //ON_LED_R();
  45   3            }
  46   2            break;
  47   2            
  48   2          case key_state_1:         // 按键确认态
  49   2            if (key_press)
  50   2            {
  51   3              if(key_press & KEY_INCRE)
  52   3              {
  53   4                  Flag_key_incre = 1;
  54   4              }
C51 COMPILER V9.52.0.0   KEY                                                               04/22/2019 15:28:00 PAGE 2   

  55   3              else if(key_press & KEY_DECRE)
  56   3              {
  57   4                  Flag_key_decre = 1;
  58   4              }
  59   3              else if(key_press & KEY_MENU)
  60   3              {
  61   4                // 每按一次，光标时间向后挪，直到最后才正常显示时间
  62   4                //Flag_key_menu = 1;
  63   4                if(++Flag_key_menu >= MENU_ADJ_NUM)
  64   4                  Flag_key_menu = 0;
  65   4              }
  66   3              key_state = key_state_2;
  67   3            }
  68   2            else
  69   2              key_state = key_state_0;  // 按键已抬起，转换到按键初始态
  70   2            break;
  71   2          case key_state_2:
  72   2            if (!key_press)
  73   2            {
  74   3      
  75   3              key_state = key_state_0;  // 按键已释放，转换到按键初始态
  76   3            }
  77   2            break;
  78   2      /*    case key_state_3:
  79   2            if (!key_press)
  80   2              key_state = key_state_0; //按键已释放，转换到按键初始态
  81   2            
  82   2            break;*/
  83   2          default:break;
  84   2        } 
  85   1        //return key_return;
  86   1      }
  87          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     83    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
