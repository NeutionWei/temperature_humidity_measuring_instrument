C51 COMPILER V9.52.0.0   KEY                                                               05/07/2019 12:46:34 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\output\key.obj
COMPILER INVOKED BY: D:\Keil_v4\C51\BIN\C51.EXE source\key.c BROWSE INCDIR(.\include) DEBUG OBJECTEXTEND PRINT(.\key.lst
                    -) TABS(2) OBJECT(.\output\key.obj)

line level    source

   1          #include "key.h"
   2          #include <reg52.h>
   3          
   4          /*
   5          sbit key8 = P1^7;
   6          sbit key1 = P1^0;
   7          sbit p00 = P0^0;
   8          sbit p01 = P0^1;
   9          sbit p06 = P0^6;
  10          
  11          
  12          void key_test()
  13          {
  14            key8 = 0;
  15            if(key1 == 0)
  16            {
  17              Delayms(20);
  18              if(key1 == 0)
  19              {
  20                if(++Flag_key_menu >= MENU_ADJ_NUM)
  21                  Flag_key_menu = 0;
  22              }
  23              while(!key1);
  24            }
  25            
  26          }*/
  27          
  28          
  29          
  30          volatile unsigned char Flag_key_incre;
  31          volatile unsigned char Flag_key_decre;
  32          volatile unsigned char Flag_key_menu;
  33          
  34          //sbit GND = P1^7;
  35          sbit PORT_K_MENU = P0^7;
  36          sbit PORT_K_INCR = P0^6;
  37          sbit PORT_K_DECR = P0^5;
  38          sbit LED1 = P0^1;
  39          
  40          void Keys_Scan()
  41          {
  42   1        static unsigned int key_state = 0;
  43   1        unsigned char key_press;
  44   1        unsigned char key_input;
  45   1        //u8 key_return = 0;  
  46   1        //GND = 0;
  47   1        key_input  = !PORT_K_MENU;
  48   1        key_input  = key_input<<1;
  49   1        key_input |= (!PORT_K_INCR);
  50   1        key_input  = key_input<<1;
  51   1        key_input |= (!PORT_K_DECR);
  52   1        //key_input  = key_input<<1;
  53   1        
  54   1        key_press  = key_input;         // 读按键I/O电平
C51 COMPILER V9.52.0.0   KEY                                                               05/07/2019 12:46:34 PAGE 2   

  55   1        switch (key_state)
  56   1        {
  57   2          case key_state_0:         // 按键初始态
  58   2            //if (key_press) key_state = key_state_1; // 键被按下，状态转换到键确认态
  59   2            if (key_press)
  60   2            {
  61   3              key_state = key_state_1;
  62   3              //ON_LED_R();
  63   3            }
  64   2            break;
  65   2            
  66   2          case key_state_1:         // 按键确认态
  67   2            if (key_press)
  68   2            {
  69   3              if(key_press & KEY_INCRE)
  70   3              {
  71   4                  Flag_key_incre = 1;
  72   4              }
  73   3              else if(key_press & KEY_DECRE)
  74   3              {
  75   4                  Flag_key_decre = 1;
  76   4              }
  77   3              else if(key_press & KEY_MENU)
  78   3              {
  79   4                // 每按一次，光标时间向后挪，直到最后才正常显示时间
  80   4                //Flag_key_menu = 1;
  81   4                //LED1 = ~LED1;
  82   4                //Flag_key_menu = !Flag_key_menu;
  83   4                if(++Flag_key_menu >= MENU_ADJ_NUM)
  84   4                  Flag_key_menu = MENU_NoADJ;
  85   4              }
  86   3              key_state = key_state_2;
  87   3            }
  88   2            else
  89   2              key_state = key_state_0;  // 按键已抬起，转换到按键初始态
  90   2            break;
  91   2          case key_state_2:
  92   2            if (!key_press)
  93   2            {
  94   3              key_state = key_state_0;  // 按键已释放，转换到按键初始态
  95   3            }
  96   2            break;
  97   2      /*    case key_state_3:
  98   2            if (!key_press)
  99   2              key_state = key_state_0; //按键已释放，转换到按键初始态
 100   2            
 101   2            break;*/
 102   2          default:break;
 103   2        } 
 104   1        //return key_return;
 105   1      }
 106          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    122    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.52.0.0   KEY                                                               05/07/2019 12:46:34 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
