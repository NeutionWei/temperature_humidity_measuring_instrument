C51 COMPILER V9.52.0.0   DETECT                                                            04/22/2019 15:28:00 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DETECT
OBJECT MODULE PLACED IN .\output\detect.obj
COMPILER INVOKED BY: D:\Keil_v4\C51\BIN\C51.EXE source\detect.c BROWSE INCDIR(.\include) DEBUG OBJECTEXTEND PRINT(.\dete
                    -ct.lst) TABS(2) OBJECT(.\output\detect.obj)

line level    source

   1          //*****************************头文件声明***************************
   2          #include "reg52.h"
   3          #include "display.h"
   4          #include "oled.h"
   5          #include "detect.h"
   6          #include "ds1302.h"
   7          #include "dht11.h"
   8          
   9          sbit p01 = P0^1;
  10          
  11          volatile unsigned char DS1302_Data[6];
  12          volatile unsigned char DHT11_Data[4];
  13          volatile unsigned char DHT11_Data_Tmp[2];
  14          volatile unsigned char Flag_detect_data1;
  15          volatile unsigned char Flag_detect_data2;
  16          volatile unsigned char Flag_rh_get;
  17          volatile unsigned char Flag_tmp_get;
  18          volatile unsigned char ave;
  19          
  20          
  21          
  22          void DS1302_Get()
  23          {
  24   1        DS1302_ReadTime();
  25   1        DS1302_Data[0] = TIME[2]/16;  //时
  26   1        DS1302_Data[1] = TIME[2]&0x0f;
  27   1        DS1302_Data[2] = TIME[1]/16;  //分
  28   1        DS1302_Data[3] = TIME[1]&0x0f;
  29   1        DS1302_Data[4] = TIME[0]/16;  //秒
  30   1        DS1302_Data[5] = TIME[0]&0x0f;
  31   1        //DisplayData[0] = smgduan[TIME[2]/16];       //时
  32   1        //DisplayData[1] = smgduan[TIME[2]&0x0f];        
  33   1        //DisplayData[2] = 0x40;
  34   1        //DisplayData[3] = smgduan[TIME[1]/16];       //分
  35   1        //DisplayData[4] = smgduan[TIME[1]&0x0f]; 
  36   1        //DisplayData[5] = 0x40;
  37   1        //DisplayData[6] = smgduan[TIME[0]/16];       //秒
  38   1        //DisplayData[7] = smgduan[TIME[0]&0x0f];
  39   1      }
  40          
  41          
  42          void DHT11_Get()
  43          {
  44   1        static volatile unsigned char temp1, temp2, oldtemp1, oldtemp2;
  45   1        unsigned char delta;
  46   1        static volatile unsigned int delay;
  47   1        static volatile unsigned char cnt;
  48   1      
  49   1        if(cnt == 0)
  50   1        {
  51   2          DHT11_receive();
  52   2          oldtemp1 = RH;
  53   2          oldtemp2 = TH;
  54   2          cnt++;
C51 COMPILER V9.52.0.0   DETECT                                                            04/22/2019 15:28:00 PAGE 2   

  55   2        }
  56   1      
  57   1        
  58   1        if(++delay >= 100)
  59   1        {
  60   2          delay = 0;
  61   2          
  62   2          DHT11_receive();
  63   2          temp1 = RH;         
  64   2          if(temp1 >= oldtemp1)
  65   2            delta = temp1 - oldtemp1;
  66   2          else
  67   2            delta = oldtemp1 - temp1;
  68   2          if(delta <= 20)
  69   2          {
  70   3            DHT11_Data_Tmp[0] = temp1;        //接收湿度高八位
  71   3            oldtemp1 = temp1;
  72   3            Flag_rh_get = 1;
  73   3          }
  74   2          //DHT11_Data_Tmp[0] = RH;       //接收湿度高八位
  75   2          //DHT11_Data_Tmp[1] = RL;        //接收湿度低八位
  76   2          
  77   2          temp2 = TH;         
  78   2          if(temp2 >= oldtemp2)
  79   2            delta = temp2 - oldtemp2;
  80   2          else
  81   2            delta = oldtemp2 - temp2;
  82   2          if(delta <= 2)
  83   2          {
  84   3            DHT11_Data_Tmp[1] = temp2;         //接收温度高八位
  85   3            oldtemp2 = temp2;
  86   3            Flag_tmp_get = 1;
  87   3          }
  88   2        }
  89   1        //DHT11_Data_Tmp[3] = TL;         //接收温度低八位
  90   1        /*int hum, temp;
  91   1        
  92   1        if(0 == dht11_init())
  93   1        {
  94   1          if(0 == dht11_read(&hum, &temp))
  95   1          {
  96   1            //Flag_DHT11_Get = 1;
  97   1            OLED_ShowNum(25, 4, hum,  2, 16);
  98   1            OLED_ShowNum(35, 4, temp, 2, 16);
  99   1          }
 100   1        }
 101   1        
 102   1        while (1)
 103   1        {
 104   1          if (dht11_read(&hum, &temp) !=0 )
 105   1          {
 106   1            //printf("\n\rdht11 read err!\n\r");
 107   1            dht11_init();
 108   1          }
 109   1          else
 110   1          {
 111   1            //printf("\n\rDHT11 : %d humidity, %d temperature\n\r", hum, temp);
 112   1          }
 113   1        }*/
 114   1      }
 115          
 116          void Dete_Data()
C51 COMPILER V9.52.0.0   DETECT                                                            04/22/2019 15:28:00 PAGE 3   

 117          {
 118   1        //int ret1, ret2;
 119   1        unsigned char tmp;
 120   1        //static unsigned char ave1;
 121   1        //static unsigned char ave2;
 122   1        
 123   1        //ret1 = Ave_Process();
 124   1        //ret2 = Ave_Process(DHT11_Data_Tmp[1], &ave2);
 125   1        
 126   1        //if(0 == ret1)
 127   1        if(Flag_rh_get == 1)
 128   1        {
 129   2          //Flag_rh_get = 0;zengjia
 130   2          tmp = DHT11_Data_Tmp[0];
 131   2          DHT11_Data[0] = tmp/10;
 132   2          DHT11_Data[1] = tmp%10;
 133   2          Flag_detect_data1 = 1;
 134   2        }
 135   1        //if(0 == ret2)
 136   1        if(Flag_tmp_get == 1)
 137   1        {
 138   2          //Flag_tmp_get = 0;zengjia
 139   2          tmp = DHT11_Data_Tmp[1];
 140   2          DHT11_Data[2] = tmp/10;
 141   2          DHT11_Data[3] = tmp%10;
 142   2          Flag_detect_data2 = 1;
 143   2        }
 144   1        
 145   1        /*if(Flag_key_menu = 1)
 146   1        {
 147   1          // 时间停止增加
 148   1          // 时间闪烁
 149   1          // 时间调整按键生效
 150   1        }*/
 151   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    218    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
