C51 COMPILER V9.52.0.0   DISPLAY                                                           05/07/2019 12:46:32 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DISPLAY
OBJECT MODULE PLACED IN .\output\display.obj
COMPILER INVOKED BY: D:\Keil_v4\C51\BIN\C51.EXE source\display.c BROWSE INCDIR(.\include) DEBUG OBJECTEXTEND PRINT(.\dis
                    -play.lst) TABS(2) OBJECT(.\output\display.obj)

line level    source

   1          #include "display.h"
   2          #include "oled.h"
   3          #include "bmp.h"
   4          #include "detect.h"
   5          #include "key.h"
   6          
   7          void Disp_Init()
   8          {
   9   1        OLED_Init();      // OLED初始化
  10   1        OLED_Clear();     // OLED清屏
  11   1        OLED_ShowCHinese(0,  0, 4); // “时”
  12   1        OLED_ShowCHinese(16, 0, 5); // “间”
  13   1        OLED_ShowChar(32, 0, ':');
  14   1        OLED_ShowChar(48, 0, '-');
  15   1        OLED_ShowChar(56, 0, '-');
  16   1        OLED_ShowChar(64, 0, ':');
  17   1        OLED_ShowChar(72, 0, '-');
  18   1        OLED_ShowChar(80, 0, '-');
  19   1        OLED_ShowChar(88, 0, ':');
  20   1        OLED_ShowChar(96, 0, '-');
  21   1        OLED_ShowChar(104,0, '-');
  22   1        OLED_ShowCHinese(0,  3, 0); // “温”
  23   1        OLED_ShowCHinese(16, 3, 1); // “度”
  24   1        OLED_ShowChar(32, 3, ':');
  25   1        OLED_ShowChar(48, 3, '-');
  26   1        OLED_ShowChar(56, 3, '-');
  27   1        //OLED_ShowChar(64, 3, '.');
  28   1        //OLED_ShowChar(72, 3, '-');
  29   1        //OLED_ShowChar(80, 3, '-');
  30   1        //OLED_ShowChar(96-24, 3, 'C');
  31   1        OLED_ShowCHinese(96-24, 3, 6);  // “度”
  32   1        OLED_ShowCHinese(0,  6, 2); // “湿”
  33   1        OLED_ShowCHinese(16, 6, 3); // “度”
  34   1        OLED_ShowChar(32, 6, ':');
  35   1        OLED_ShowChar(48, 6, '-');
  36   1        OLED_ShowChar(56, 6, '-');
  37   1        //OLED_ShowChar(64, 6, '.');
  38   1        //OLED_ShowChar(72, 6, '-');
  39   1        //OLED_ShowChar(80, 6, '-');
  40   1        //OLED_ShowChar(96-24, 6, '%');
  41   1        OLED_ShowChar(96-24, 6, 'R');
  42   1        OLED_ShowChar(104-24,6, 'H');
  43   1      }
  44          
  45          void Disp_Data()
  46          {
  47   1        static unsigned int delay_hour;
  48   1        static unsigned int delay_min;
  49   1        static unsigned int delay_sec;
  50   1        
  51   1        /*//OLED_Clear();
  52   1        
  53   1        // 时间显示
  54   1        OLED_ShowNum(48, 0, DS1302_Data[0], 1, 16);
C51 COMPILER V9.52.0.0   DISPLAY                                                           05/07/2019 12:46:32 PAGE 2   

  55   1        OLED_ShowNum(56, 0, DS1302_Data[1], 1, 16);
  56   1        //OLED_ShowChar(45, 2, ':');
  57   1        OLED_ShowNum(72, 0, DS1302_Data[2], 1, 16);
  58   1        OLED_ShowNum(80, 0, DS1302_Data[3], 1, 16);
  59   1        //OLED_ShowChar(75, 2, ':');  
  60   1        OLED_ShowNum(96, 0, DS1302_Data[4], 1, 16);
  61   1        OLED_ShowNum(104,0, DS1302_Data[5], 1, 16);
  62   1      */
  63   1        
  64   1        // 按键调整显示
  65   1        if(Flag_key_menu == MENU_NoADJ)
  66   1        {
  67   2          if(Flag_DS1302_Write == 1)
  68   2          {
  69   3            Flag_DS1302_Write = 0;
  70   3            // 写入后第一次不显示
  71   3          }
  72   2          else
  73   2          {
  74   3            // 时间显示
  75   3            OLED_ShowNum(48, 0, DS1302_Data[0], 1, 16);
  76   3            OLED_ShowNum(56, 0, DS1302_Data[1], 1, 16);
  77   3            //OLED_ShowChar(45, 2, ':');
  78   3            OLED_ShowNum(72, 0, DS1302_Data[2], 1, 16);
  79   3            OLED_ShowNum(80, 0, DS1302_Data[3], 1, 16);
  80   3            //OLED_ShowChar(75, 2, ':');  
  81   3            OLED_ShowNum(96, 0, DS1302_Data[4], 1, 16);
  82   3            OLED_ShowNum(104,0, DS1302_Data[5], 1, 16);
  83   3          }
  84   2        }
  85   1        else if(Flag_key_menu == MENU_ADJ_HOUR)
  86   1        {
  87   2          if(++delay_hour >= 50)
  88   2            delay_hour = 0;
  89   2          
  90   2          if(delay_hour <= 25)
  91   2          {
  92   3            // 时间显示
  93   3            OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
  94   3            OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
  95   3            //OLED_ShowChar(45, 2, ':');
  96   3            OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
  97   3            OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
  98   3            //OLED_ShowChar(75, 2, ':');  
  99   3            OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 100   3            OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 101   3          }
 102   2          else
 103   2          {
 104   3            //OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
 105   3            //OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
 106   3            OLED_ShowChar(48, 0, ' ');
 107   3            OLED_ShowChar(56, 0, ' ');
 108   3            OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
 109   3            OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
 110   3            //OLED_ShowChar(75, 2, ':');  
 111   3            OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 112   3            OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 113   3          }
 114   2        }
 115   1        else if(Flag_key_menu == MENU_ADJ_MIN)
 116   1        {
C51 COMPILER V9.52.0.0   DISPLAY                                                           05/07/2019 12:46:32 PAGE 3   

 117   2          if(++delay_min >= 50)
 118   2            delay_min = 0;
 119   2          
 120   2          if(delay_min <= 25)
 121   2          {
 122   3            // 时间显示
 123   3            OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
 124   3            OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
 125   3            //OLED_ShowChar(45, 2, ':');
 126   3            OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
 127   3            OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
 128   3            //OLED_ShowChar(75, 2, ':');  
 129   3            OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 130   3            OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 131   3          }
 132   2          else
 133   2          {
 134   3            OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
 135   3            OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
 136   3            OLED_ShowChar(72, 0, ' ');
 137   3            OLED_ShowChar(80, 0, ' ');
 138   3            //OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
 139   3            //OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
 140   3            //OLED_ShowChar(75, 2, ':');  
 141   3            OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 142   3            OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 143   3          }
 144   2        }
 145   1        else if(Flag_key_menu == MENU_ADJ_SEC)
 146   1        {
 147   2          if(++delay_sec >= 50)
 148   2            delay_sec = 0;
 149   2          
 150   2          if(delay_sec <= 25)
 151   2          {
 152   3            // 时间显示
 153   3            OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
 154   3            OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
 155   3            //OLED_ShowChar(45, 2, ':');
 156   3            OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
 157   3            OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
 158   3            //OLED_ShowChar(75, 2, ':');  
 159   3            OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 160   3            OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 161   3          }
 162   2          else
 163   2          {
 164   3            OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
 165   3            OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
 166   3            OLED_ShowChar(96, 0, ' ');
 167   3            OLED_ShowChar(104, 0, ' ');
 168   3            OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
 169   3            OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
 170   3            //OLED_ShowChar(75, 2, ':');  
 171   3            //OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 172   3            //OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 173   3          }
 174   2        }
 175   1        
 176   1        if(Flag_detect_data2)
 177   1        {
 178   2          //Flag_detect_data = 0;
C51 COMPILER V9.52.0.0   DISPLAY                                                           05/07/2019 12:46:32 PAGE 4   

 179   2          // 温度显示
 180   2          OLED_ShowNum(48, 3, DHT11_Data[2], 1, 16);
 181   2          OLED_ShowNum(56, 3, DHT11_Data[3], 1, 16);
 182   2          //OLED_ShowNum(72, 3, DHT11_Data[3]/10, 1, 16);
 183   2          //OLED_ShowNum(80, 3, DHT11_Data[3]%10, 1, 16);
 184   2        }
 185   1        if(Flag_detect_data1)
 186   1        {
 187   2          // 湿度显示
 188   2          OLED_ShowNum(48, 6, DHT11_Data[0], 1, 16);
 189   2          OLED_ShowNum(56, 6, DHT11_Data[1], 1, 16);
 190   2          //OLED_ShowNum(72, 6, DHT11_Data[1]/10, 1, 16);
 191   2          //OLED_ShowNum(80, 6, DHT11_Data[1]%10, 1, 16);
 192   2        }
 193   1      /*OLED_Clear();
 194   1        OLED_ShowCHinese(0,0,0);//中
 195   1        OLED_ShowCHinese(18,0,1);//景
 196   1        OLED_ShowCHinese(36,0,2);//园
 197   1        OLED_ShowCHinese(54,0,3);//电
 198   1        OLED_ShowCHinese(72,0,4);//子
 199   1        OLED_ShowCHinese(90,0,5);//科
 200   1        OLED_ShowCHinese(108,0,6);//技
 201   1        OLED_ShowString(0,2,"1.3' OLED TEST");
 202   1        OLED_ShowString(8,2,"ZHONGJINGYUAN");  
 203   1        OLED_ShowString(20,4,"2014/05/01"); */ 
 204   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    990    ----
   CONSTANT SIZE    =   2048    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
