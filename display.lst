C51 COMPILER V9.52.0.0   DISPLAY                                                           05/14/2019 12:27:07 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DISPLAY
OBJECT MODULE PLACED IN .\output\display.obj
COMPILER INVOKED BY: D:\Keil_v4\C51\BIN\C51.EXE source\display.c BROWSE INCDIR(.\include) DEBUG OBJECTEXTEND PRINT(.\dis
                    -play.lst) TABS(2) OBJECT(.\output\display.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    display.c
   4            * @author  现代电子技术综合设计第10组
   5            * @date    2019-04~2019-05
   6            * @brief   与显示相关Function
   7            ******************************************************************************
   8            */ 
   9          
  10          #include "display.h"
  11          #include "oled.h"
  12          #include "bmp.h"
  13          #include "detect.h"
  14          #include "key.h"
  15          
  16          
  17           /**
  18            * @brief  显示模块初始化
  19            * @param  none
  20            * @retval none
  21            */
  22          void Disp_Init()
  23          {
  24   1        OLED_Init();      // OLED初始化
  25   1        OLED_Clear();     // OLED清屏
  26   1        OLED_ShowCHinese(0,  0, 4); // “时”
  27   1        OLED_ShowCHinese(16, 0, 5); // “间”
  28   1        OLED_ShowChar(32, 0, ':');
  29   1        OLED_ShowChar(48, 0, '-');
  30   1        OLED_ShowChar(56, 0, '-');
  31   1        OLED_ShowChar(64, 0, ':');
  32   1        OLED_ShowChar(72, 0, '-');
  33   1        OLED_ShowChar(80, 0, '-');
  34   1        OLED_ShowChar(88, 0, ':');
  35   1        OLED_ShowChar(96, 0, '-');
  36   1        OLED_ShowChar(104,0, '-');
  37   1        OLED_ShowCHinese(0,  3, 0); // “温”
  38   1        OLED_ShowCHinese(16, 3, 1); // “度”
  39   1        OLED_ShowChar(32, 3, ':');
  40   1        OLED_ShowChar(48, 3, '-');
  41   1        OLED_ShowChar(56, 3, '-');
  42   1        //OLED_ShowChar(64, 3, '.');
  43   1        //OLED_ShowChar(72, 3, '-');
  44   1        //OLED_ShowChar(80, 3, '-');
  45   1        //OLED_ShowChar(96-24, 3, 'C');
  46   1        OLED_ShowCHinese(96-24, 3, 6);  // “度”
  47   1        OLED_ShowCHinese(0,  6, 2); // “湿”
  48   1        OLED_ShowCHinese(16, 6, 3); // “度”
  49   1        OLED_ShowChar(32, 6, ':');
  50   1        OLED_ShowChar(48, 6, '-');
  51   1        OLED_ShowChar(56, 6, '-');
  52   1        //OLED_ShowChar(64, 6, '.');
  53   1        //OLED_ShowChar(72, 6, '-');
  54   1        //OLED_ShowChar(80, 6, '-');
C51 COMPILER V9.52.0.0   DISPLAY                                                           05/14/2019 12:27:07 PAGE 2   

  55   1        //OLED_ShowChar(96-24, 6, '%');
  56   1        OLED_ShowChar(96-24, 6, 'R');
  57   1        OLED_ShowChar(104-24,6, 'H');
  58   1      }
  59          
  60          
  61           /**
  62            * @brief  显示温湿度与时钟数据
  63            * @param  none
  64            * @retval none
  65            */
  66          void Disp_Data()
  67          {
  68   1        static unsigned int delay_hour;
  69   1        static unsigned int delay_min;
  70   1        static unsigned int delay_sec;
  71   1        
  72   1        
  73   1        // 按键调整显示
  74   1        if(Flag_key_menu == MENU_NoADJ)
  75   1        {
  76   2          if(Flag_DS1302_Write == 1)
  77   2          {
  78   3            Flag_DS1302_Write = 0;
  79   3            // 写入后第一次不显示
  80   3          }
  81   2          else
  82   2          {
  83   3            // 时间显示
  84   3            OLED_ShowNum(48, 0, DS1302_Data[0], 1, 16);
  85   3            OLED_ShowNum(56, 0, DS1302_Data[1], 1, 16);
  86   3            //OLED_ShowChar(45, 2, ':');
  87   3            OLED_ShowNum(72, 0, DS1302_Data[2], 1, 16);
  88   3            OLED_ShowNum(80, 0, DS1302_Data[3], 1, 16);
  89   3            //OLED_ShowChar(75, 2, ':');  
  90   3            OLED_ShowNum(96, 0, DS1302_Data[4], 1, 16);
  91   3            OLED_ShowNum(104,0, DS1302_Data[5], 1, 16);
  92   3          }
  93   2        }
  94   1        else if(Flag_key_menu == MENU_ADJ_HOUR)
  95   1        {
  96   2          if(++delay_hour >= 50)
  97   2            delay_hour = 0;
  98   2          
  99   2          if(delay_hour <= 25)
 100   2          {
 101   3            // 时间显示
 102   3            OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
 103   3            OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
 104   3            //OLED_ShowChar(45, 2, ':');
 105   3            OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
 106   3            OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
 107   3            //OLED_ShowChar(75, 2, ':');  
 108   3            OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 109   3            OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 110   3          }
 111   2          else
 112   2          {
 113   3            //OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
 114   3            //OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
 115   3            OLED_ShowChar(48, 0, ' ');
 116   3            OLED_ShowChar(56, 0, ' ');
C51 COMPILER V9.52.0.0   DISPLAY                                                           05/14/2019 12:27:07 PAGE 3   

 117   3            OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
 118   3            OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
 119   3            //OLED_ShowChar(75, 2, ':');  
 120   3            OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 121   3            OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 122   3          }
 123   2        }
 124   1        else if(Flag_key_menu == MENU_ADJ_MIN)
 125   1        {
 126   2          if(++delay_min >= 50)
 127   2            delay_min = 0;
 128   2          
 129   2          if(delay_min <= 25)
 130   2          {
 131   3            // 时间显示
 132   3            OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
 133   3            OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
 134   3            //OLED_ShowChar(45, 2, ':');
 135   3            OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
 136   3            OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
 137   3            //OLED_ShowChar(75, 2, ':');  
 138   3            OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 139   3            OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 140   3          }
 141   2          else
 142   2          {
 143   3            OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
 144   3            OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
 145   3            OLED_ShowChar(72, 0, ' ');
 146   3            OLED_ShowChar(80, 0, ' ');
 147   3            //OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
 148   3            //OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
 149   3            //OLED_ShowChar(75, 2, ':');  
 150   3            OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 151   3            OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 152   3          }
 153   2        }
 154   1        else if(Flag_key_menu == MENU_ADJ_SEC)
 155   1        {
 156   2          if(++delay_sec >= 50)
 157   2            delay_sec = 0;
 158   2          
 159   2          if(delay_sec <= 25)
 160   2          {
 161   3            // 时间显示
 162   3            OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
 163   3            OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
 164   3            //OLED_ShowChar(45, 2, ':');
 165   3            OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
 166   3            OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
 167   3            //OLED_ShowChar(75, 2, ':');  
 168   3            OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 169   3            OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 170   3          }
 171   2          else
 172   2          {
 173   3            OLED_ShowNum(48, 0, DS1302_Data_Tmp[0], 1, 16);
 174   3            OLED_ShowNum(56, 0, DS1302_Data_Tmp[1], 1, 16);
 175   3            OLED_ShowChar(96, 0, ' ');
 176   3            OLED_ShowChar(104, 0, ' ');
 177   3            OLED_ShowNum(72, 0, DS1302_Data_Tmp[2], 1, 16);
 178   3            OLED_ShowNum(80, 0, DS1302_Data_Tmp[3], 1, 16);
C51 COMPILER V9.52.0.0   DISPLAY                                                           05/14/2019 12:27:07 PAGE 4   

 179   3            //OLED_ShowChar(75, 2, ':');  
 180   3            //OLED_ShowNum(96, 0, DS1302_Data_Tmp[4], 1, 16);
 181   3            //OLED_ShowNum(104,0, DS1302_Data_Tmp[5], 1, 16);
 182   3          }
 183   2        }
 184   1        
 185   1        if(Flag_detect_data2)
 186   1        {
 187   2          //Flag_detect_data = 0;
 188   2          // 温度显示
 189   2          OLED_ShowNum(48, 3, DHT11_Data[2], 1, 16);
 190   2          OLED_ShowNum(56, 3, DHT11_Data[3], 1, 16);
 191   2          //OLED_ShowNum(72, 3, DHT11_Data[3]/10, 1, 16);
 192   2          //OLED_ShowNum(80, 3, DHT11_Data[3]%10, 1, 16);
 193   2        }
 194   1        if(Flag_detect_data1)
 195   1        {
 196   2          // 湿度显示
 197   2          OLED_ShowNum(48, 6, DHT11_Data[0], 1, 16);
 198   2          OLED_ShowNum(56, 6, DHT11_Data[1], 1, 16);
 199   2          //OLED_ShowNum(72, 6, DHT11_Data[1]/10, 1, 16);
 200   2          //OLED_ShowNum(80, 6, DHT11_Data[1]%10, 1, 16);
 201   2        }
 202   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    990    ----
   CONSTANT SIZE    =   2048    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
